/* base styling */

:root {
    --primary-color: #e50914;
    /*this is how to def a variable in css, def a primary color variable*/
    --dark-color: #141414;
}

* {
    box-sizing: border-box;
    /*set a reset so that padding/margin wont affect anything*/
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Arial', sans-serif;
    -webkit-font-smoothing: antialiased;
    background: #000;
    color: #999;
}

ul {
    list-style: none;
}

h1,
h2,
h3,
h4 {
    color: #fff;
}

a {
    color: #fff;
    text-decoration: none;
}

p {
    margin: 0.5rem 0;
    /* by default 1rem = 16px, 0.5rem is 8px*/
}

img {
    width: 100%;
    /*width of any image will take 100% of its container*/
}


/*showcase styling*/

.showcase {
    width: 100%;
    height: 93vh;
    position: relative;
    /*relative cos we will pos other things absolute around this*/
    background: url('../images/nf-wall.jpg') no-repeat center center/cover;
    /*bg img should not repeat, should center on x,y axis and cover bg*/
}


/*add a blur to the background img*/

.showcase::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    /*z-index of 1 puts it on top of all;*/
    background: rgba(0, 0, 0, 0.6);
    box-shadow: inset 100px 80px 260px #000000, inset -100px -80px 260px #000000;
    /*shadow left top how sharp  color, the comma negative values puts the same shadow on the right*/
}

.showcase-top {
    position: relative;
    z-index: 2;
    /*z-index of 2 puts it on top of all. the higher the number the higher the pos, 2 is bigger than 1, so 2 will be on top;*/
    height: 90px;
}

.showcase-top img {
    width: 170px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*this brings img to the center*/
}

.showcase-top a {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translate(-50%, -50%);
}

.showcase-content {
    position: relative;
    z-index: 2;
    /*also add z-index of 2 to bring it top*/
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    margin-top: 9rem;
}

.showcase-content h1 {
    font-weight: 700;
    font-size: 5.2rem;
    line-height: 1.1;
    margin: 0 0 2rem;
}

.showcase-content p {
    text-transform: uppercase;
    color: #fff;
    font-weight: 400;
    font-size: 1.9rem;
    line-height: 1.25;
    margin: 0 0 2rem;
}


/*Lets put our utitlity classes at the buttom*/


/*Tabs */


/* make the background of the tab lighter */

.tabs {
    background: var(--dark-color);
    padding-top: 1rem;
    border-bottom: 3px solid#3d3d3d;
}


/* put the grid on the container class inside the tab */

.tabs .container {
    /* display: flex;
    flex-direction: row; */
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1rem;
    align-items: center;
    justify-content: center;
    text-align: center;
    /* for flex and grid, align-items: justify-content: text-align: center is often used */
    max-width: 70%;
}

.tabs p {
    font-size: 1.2rem;
    padding: 0.5rem;
}


/* add padding to individual divs */

.tabs .container>div {
    padding: 1.5rem;
}

.tabs .container>div:hover {
    color: #fff;
    cursor: pointer;
}

.tab-border {
    border-bottom: var(--primary-color) 4px solid;
}


/* style the tab content */

.tab-content {
    padding: 3rem 0;
    background: #000;
    color: #fff;
    /* I added to make it look same as video since I didnt get the same */
    max-width: 70%;
    margin: auto;
}


/* Hide content initially, use js to display it when clicked*/

#tab-1-content,
#tab-2-content,
#tab-3-content {
    display: none;
}

.show {
    display: block !important;
    /* always show the class that is picked This follows the one immediately */
}


/* style the tab 1 content */

#tab-1-content .tab-1-content-inner {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2rem;
    align-items: center;
    justify-content: center;
}


/* style the tab 2 content */

#tab-2-content .tab-2-content-top {
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-gap: 1rem;
    align-items: center;
    justify-content: center;
}

#tab-2-content .tab-2-content-bottom {
    margin-top: 2rem;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2rem;
    align-items: center;
    justify-content: center;
    text-align: center;
}


/* style the tab 3 content */

.table {
    width: 100%;
    margin-top: 2rem;
    /* remove the separating lines showing on the table -optional*/
    border-collapse: collapse;
    border-spacing: 0;
}

.thead th {
    text-transform: uppercase;
    padding: 0.8rem;
}

.table tbody tr td {
    color: #999;
    text-align: center;
    padding: 0.8rem;
}


/* We want the table centered but not the text on the left, let's use the pseudo class to handle the first child of .table tbody tr td*/

.table tbody tr td:first-child {
    text-align: left;
}


/* color alternate table rows diff with nth child  then go to table and remove the separating lines showing on the table -optional*/

.table tbody tr:nth-child(odd) {
    background: #222;
}


/* Style the footer */

.footer {
    max-width: 75%;
    margin: 1rem auto;
    overflow: auto;
}

.footer,
.footer a {
    color: #999;
    font-size: 0.9rem;
}

.footer p {
    margin-bottom: 1.5rem;
}

.footer .footer-cols {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 2rem;
}

.footer li {
    line-height: 1.9;
}


/* Container styling */

.container {
    max-width: 70%;
    margin: auto;
    overflow: hidden;
    padding: 0 2rem;
}


/* Text Styles*/

.text-xl {
    /* We didn't have any xl in this project but building to scale is good so we can use this if the need arises in future*/
    font-size: 2rem;
    margin-bottom: 1rem;
}

.text-lg {
    font-size: 1.8rem;
    margin-bottom: 1rem;
}

.text-md {
    font-size: 1.5rem;
    margin-bottom: 1rem;
}

.text-center {
    text-align: center;
}

.text-dark {
    color: #999;
}


/*Button*/

.btn {
    display: inline-block;
    background: var(--primary-color);
    /*using the variable defd earlier above*/
    color: #fff;
    padding: 0.4rem 1.3rem;
    font-size: 1rem;
    text-align: center;
    border: none;
    cursor: pointer;
    margin-right: 0.5rem;
    /*putting margin on the right create space to the right if we are arranging btns in a row */
    outline: none;
    box-shadow: 0 1px rgba(0, 0, 0, 0.45);
    border-radius: 2px;
}

.btn:hover {
    opacity: 0.9;
    /*here we didnt change the color, we just make it a little transoarent*/
}

.btn-rounded {
    border-radius: 5px;
}

.btn-xl {
    font-size: 2rem;
    padding: 1.5rem 2.1rem;
    text-transform: uppercase;
    /*advisable to use this against writing uppercase letters in our html*/
}

.btn-lg {
    font-size: 1rem;
    padding: 0.8rem 1.3rem;
    text-transform: uppercase;
    /*advisable to use this against writing uppercase letters in our html*/
}

.btn-icon {
    margin-left: 1rem;
}


/* For Small Screens */

@media (max-width: 960px) {
    .showcase {
        height: 70vh;
    }
    .hide-sm {
        display: none;
    }
    .showcase-top img {
        top: 30%;
        left: 5%;
        transform: translate(0);
    }
    .showcase-content {
        margin-top: 5rem;
    }
    .showcase-content h1 {
        font-size: 3.7rem;
        /*default 5.2*/
        line-height: 1;
    }
    .showcase-content p {
        font-size: 1.5rem;
    }
    .footer .footer-cols {
        grid-template-columns: repeat(2, 1fr);
    }
    .btn-xl {
        font-size: 1.5rem;
        padding: 1.4rem 2rem;
    }
    .btn-rounded {
        margin-right: 0;
        padding: 0.5rem;
    }
    .text-xl {
        font-size: 1.5rem;
    }
    .text-lg {
        font-size: 1.3rem;
    }
    .text-md {
        font-size: 1rem;
    }
}


/*stck everything to 1 coloumn @700px*/

@media (max-width: 700px) {
    .showcase-content {
        margin-top: 4rem;
    }
    .showcase::after {
        box-shadow: inset 30px 30px 120px #000000, inset -30px -30px 120px #000000;
    }
    .showcase-content h1 {
        font-size: 2.5rem;
        /*default 5.2*/
        line-height: 1;
    }
    #tab-1-content .tab-1-content-inner {
        grid-template-columns: 1fr;
        text-align: center;
    }
    #tab-2-content .tab-2-content-top {
        display: block;
        text-align: center;
    }
    #tab-2-content .tab-2-content-bottom {
        grid-template-columns: 1fr;
    }
}